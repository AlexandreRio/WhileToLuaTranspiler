/*
* generated by Xtext
*/
grammar InternalMyDsl;

options {
	superClass=AbstractInternalContentAssistParser;
	backtrack=true;
	
	 k=2;
	
}

@lexer::header {
package org.xtext.tl.mydsl.ui.contentassist.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.ui.editor.contentassist.antlr.internal.Lexer;
}

@parser::header {
package org.xtext.tl.mydsl.ui.contentassist.antlr.internal; 

import java.io.InputStream;
import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.ui.editor.contentassist.antlr.internal.AbstractInternalContentAssistParser;
import org.eclipse.xtext.ui.editor.contentassist.antlr.internal.DFA;
import org.xtext.tl.mydsl.services.MyDslGrammarAccess;

}

@parser::members {
 
 	private MyDslGrammarAccess grammarAccess;
 	
    public void setGrammarAccess(MyDslGrammarAccess grammarAccess) {
    	this.grammarAccess = grammarAccess;
    }
    
    @Override
    protected Grammar getGrammar() {
    	return grammarAccess.getGrammar();
    }
    
    @Override
    protected String getValueForTokenName(String tokenName) {
    	return tokenName;
    }

}




// Entry rule entryRuleModel
entryRuleModel 
:
{ before(grammarAccess.getModelRule()); }
	 ruleModel
{ after(grammarAccess.getModelRule()); } 
	 EOF 
;

// Rule Model
ruleModel
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getModelAccess().getGroup()); }
(rule__Model__Group__0)*
{ after(grammarAccess.getModelAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRulefunction
entryRulefunction 
:
{ before(grammarAccess.getFunctionRule()); }
	 rulefunction
{ after(grammarAccess.getFunctionRule()); } 
	 EOF 
;

// Rule function
rulefunction
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getFunctionAccess().getGroup()); }
(rule__Function__Group__0)
{ after(grammarAccess.getFunctionAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleDefiniton
entryRuleDefiniton 
:
{ before(grammarAccess.getDefinitonRule()); }
	 ruleDefiniton
{ after(grammarAccess.getDefinitonRule()); } 
	 EOF 
;

// Rule Definiton
ruleDefiniton
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getDefinitonAccess().getGroup()); }
(rule__Definiton__Group__0)
{ after(grammarAccess.getDefinitonAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleInput
entryRuleInput 
:
{ before(grammarAccess.getInputRule()); }
	 ruleInput
{ after(grammarAccess.getInputRule()); } 
	 EOF 
;

// Rule Input
ruleInput
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getInputAccess().getGroup()); }
(rule__Input__Group__0)
{ after(grammarAccess.getInputAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleOutput
entryRuleOutput 
:
{ before(grammarAccess.getOutputRule()); }
	 ruleOutput
{ after(grammarAccess.getOutputRule()); } 
	 EOF 
;

// Rule Output
ruleOutput
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getOutputAccess().getGroup()); }
(rule__Output__Group__0)
{ after(grammarAccess.getOutputAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleCommands
entryRuleCommands 
:
{ before(grammarAccess.getCommandsRule()); }
	 ruleCommands
{ after(grammarAccess.getCommandsRule()); } 
	 EOF 
;

// Rule Commands
ruleCommands
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getCommandsAccess().getGroup()); }
(rule__Commands__Group__0)
{ after(grammarAccess.getCommandsAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleVars
entryRuleVars 
:
{ before(grammarAccess.getVarsRule()); }
	 ruleVars
{ after(grammarAccess.getVarsRule()); } 
	 EOF 
;

// Rule Vars
ruleVars
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getVarsAccess().getGroup()); }
(rule__Vars__Group__0)
{ after(grammarAccess.getVarsAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleExprs
entryRuleExprs 
:
{ before(grammarAccess.getExprsRule()); }
	 ruleExprs
{ after(grammarAccess.getExprsRule()); } 
	 EOF 
;

// Rule Exprs
ruleExprs
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getExprsAccess().getGroup()); }
(rule__Exprs__Group__0)
{ after(grammarAccess.getExprsAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleCommand
entryRuleCommand 
:
{ before(grammarAccess.getCommandRule()); }
	 ruleCommand
{ after(grammarAccess.getCommandRule()); } 
	 EOF 
;

// Rule Command
ruleCommand
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getCommandAccess().getAlternatives()); }
(rule__Command__Alternatives)
{ after(grammarAccess.getCommandAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleExpr
entryRuleExpr 
:
{ before(grammarAccess.getExprRule()); }
	 ruleExpr
{ after(grammarAccess.getExprRule()); } 
	 EOF 
;

// Rule Expr
ruleExpr
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getExprAccess().getAlternatives()); }
(rule__Expr__Alternatives)
{ after(grammarAccess.getExprAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleAnd
entryRuleAnd 
:
{ before(grammarAccess.getAndRule()); }
	 ruleAnd
{ after(grammarAccess.getAndRule()); } 
	 EOF 
;

// Rule And
ruleAnd
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getAndAccess().getGroup()); }
(rule__And__Group__0)
{ after(grammarAccess.getAndAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleOr
entryRuleOr 
:
{ before(grammarAccess.getOrRule()); }
	 ruleOr
{ after(grammarAccess.getOrRule()); } 
	 EOF 
;

// Rule Or
ruleOr
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getOrAccess().getGroup()); }
(rule__Or__Group__0)
{ after(grammarAccess.getOrAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleNot
entryRuleNot 
:
{ before(grammarAccess.getNotRule()); }
	 ruleNot
{ after(grammarAccess.getNotRule()); } 
	 EOF 
;

// Rule Not
ruleNot
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getNotAccess().getGroup()); }
(rule__Not__Group__0)
{ after(grammarAccess.getNotAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleEq
entryRuleEq 
:
{ before(grammarAccess.getEqRule()); }
	 ruleEq
{ after(grammarAccess.getEqRule()); } 
	 EOF 
;

// Rule Eq
ruleEq
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getEqAccess().getAlternatives()); }
(rule__Eq__Alternatives)
{ after(grammarAccess.getEqAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleExprTerm
entryRuleExprTerm 
:
{ before(grammarAccess.getExprTermRule()); }
	 ruleExprTerm
{ after(grammarAccess.getExprTermRule()); } 
	 EOF 
;

// Rule ExprTerm
ruleExprTerm
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getExprTermAccess().getExprTermAssignment()); }
(rule__ExprTerm__ExprTermAssignment)
{ after(grammarAccess.getExprTermAccess().getExprTermAssignment()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleExprSimple
entryRuleExprSimple 
:
{ before(grammarAccess.getExprSimpleRule()); }
	 ruleExprSimple
{ after(grammarAccess.getExprSimpleRule()); } 
	 EOF 
;

// Rule ExprSimple
ruleExprSimple
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getExprSimpleAccess().getGroup()); }
(rule__ExprSimple__Group__0)
{ after(grammarAccess.getExprSimpleAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleLexpr
entryRuleLexpr 
:
{ before(grammarAccess.getLexprRule()); }
	 ruleLexpr
{ after(grammarAccess.getLexprRule()); } 
	 EOF 
;

// Rule Lexpr
ruleLexpr
    @init {
		int stackSize = keepStackSize();
    }
	:
(
(
{ before(grammarAccess.getLexprAccess().getGroup()); }
(rule__Lexpr__Group__0)
{ after(grammarAccess.getLexprAccess().getGroup()); }
)
(
{ before(grammarAccess.getLexprAccess().getGroup()); }
(rule__Lexpr__Group__0)*
{ after(grammarAccess.getLexprAccess().getGroup()); }
)
)

;
finally {
	restoreStackSize(stackSize);
}




rule__Command__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCommandAccess().getGroup_0()); }
(rule__Command__Group_0__0)
{ after(grammarAccess.getCommandAccess().getGroup_0()); }
)

    |(
{ before(grammarAccess.getCommandAccess().getGroup_1()); }
(rule__Command__Group_1__0)
{ after(grammarAccess.getCommandAccess().getGroup_1()); }
)

    |(
{ before(grammarAccess.getCommandAccess().getGroup_2()); }
(rule__Command__Group_2__0)
{ after(grammarAccess.getCommandAccess().getGroup_2()); }
)

    |(
{ before(grammarAccess.getCommandAccess().getGroup_3()); }
(rule__Command__Group_3__0)
{ after(grammarAccess.getCommandAccess().getGroup_3()); }
)

    |(
{ before(grammarAccess.getCommandAccess().getGroup_4()); }
(rule__Command__Group_4__0)
{ after(grammarAccess.getCommandAccess().getGroup_4()); }
)

    |(
{ before(grammarAccess.getCommandAccess().getGroup_5()); }
(rule__Command__Group_5__0)
{ after(grammarAccess.getCommandAccess().getGroup_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Expr__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExprAccess().getExprSimpleAssignment_0()); }
(rule__Expr__ExprSimpleAssignment_0)
{ after(grammarAccess.getExprAccess().getExprSimpleAssignment_0()); }
)

    |(
{ before(grammarAccess.getExprAccess().getExpEtAssignment_1()); }
(rule__Expr__ExpEtAssignment_1)
{ after(grammarAccess.getExprAccess().getExpEtAssignment_1()); }
)

    |(
{ before(grammarAccess.getExprAccess().getExpTerminaleAssignment_2()); }
(rule__Expr__ExpTerminaleAssignment_2)
{ after(grammarAccess.getExprAccess().getExpTerminaleAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Eq__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEqAccess().getGroup_0()); }
(rule__Eq__Group_0__0)
{ after(grammarAccess.getEqAccess().getGroup_0()); }
)

    |(
{ before(grammarAccess.getEqAccess().getGroup_1()); }
(rule__Eq__Group_1__0)
{ after(grammarAccess.getEqAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Eq__ExprEq1Alternatives_0_0_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEqAccess().getExprEq1ExprSimpleParserRuleCall_0_0_0_0()); }
	ruleExprSimple
{ after(grammarAccess.getEqAccess().getExprEq1ExprSimpleParserRuleCall_0_0_0_0()); }
)

    |(
{ before(grammarAccess.getEqAccess().getExprEq1ExprTermParserRuleCall_0_0_0_1()); }
	ruleExprTerm
{ after(grammarAccess.getEqAccess().getExprEq1ExprTermParserRuleCall_0_0_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Eq__ExprEq2Alternatives_0_4_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEqAccess().getExprEq2ExprSimpleParserRuleCall_0_4_0_0()); }
	ruleExprSimple
{ after(grammarAccess.getEqAccess().getExprEq2ExprSimpleParserRuleCall_0_4_0_0()); }
)

    |(
{ before(grammarAccess.getEqAccess().getExprEq2ExprTermParserRuleCall_0_4_0_1()); }
	ruleExprTerm
{ after(grammarAccess.getEqAccess().getExprEq2ExprTermParserRuleCall_0_4_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Eq__ExpAlternatives_1_1_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEqAccess().getExpExprTermParserRuleCall_1_1_0_0()); }
	ruleExprTerm
{ after(grammarAccess.getEqAccess().getExpExprTermParserRuleCall_1_1_0_0()); }
)

    |(
{ before(grammarAccess.getEqAccess().getExpExprSimpleParserRuleCall_1_1_0_1()); }
	ruleExprSimple
{ after(grammarAccess.getEqAccess().getExpExprSimpleParserRuleCall_1_1_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ExprTerm__ExprTermAlternatives_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExprTermAccess().getExprTermNilKeyword_0_0()); }

	'nil' 

{ after(grammarAccess.getExprTermAccess().getExprTermNilKeyword_0_0()); }
)

    |(
{ before(grammarAccess.getExprTermAccess().getExprTermVARIABLETerminalRuleCall_0_1()); }
	RULE_VARIABLE
{ after(grammarAccess.getExprTermAccess().getExprTermVARIABLETerminalRuleCall_0_1()); }
)

    |(
{ before(grammarAccess.getExprTermAccess().getExprTermSYMBOLESTerminalRuleCall_0_2()); }
	RULE_SYMBOLES
{ after(grammarAccess.getExprTermAccess().getExprTermSYMBOLESTerminalRuleCall_0_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ExprSimple__Alternatives_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExprSimpleAccess().getGroup_1_0()); }
(rule__ExprSimple__Group_1_0__0)
{ after(grammarAccess.getExprSimpleAccess().getGroup_1_0()); }
)

    |(
{ before(grammarAccess.getExprSimpleAccess().getGroup_1_1()); }
(rule__ExprSimple__Group_1_1__0)
{ after(grammarAccess.getExprSimpleAccess().getGroup_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ExprSimple__MotAlternatives_1_0_0_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExprSimpleAccess().getMotConsKeyword_1_0_0_0_0()); }

	'cons' 

{ after(grammarAccess.getExprSimpleAccess().getMotConsKeyword_1_0_0_0_0()); }
)

    |(
{ before(grammarAccess.getExprSimpleAccess().getMotListKeyword_1_0_0_0_1()); }

	'list' 

{ after(grammarAccess.getExprSimpleAccess().getMotListKeyword_1_0_0_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ExprSimple__MotAlternatives_1_1_0_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExprSimpleAccess().getMotHdKeyword_1_1_0_0_0()); }

	'hd' 

{ after(grammarAccess.getExprSimpleAccess().getMotHdKeyword_1_1_0_0_0()); }
)

    |(
{ before(grammarAccess.getExprSimpleAccess().getMotTlKeyword_1_1_0_0_1()); }

	'tl' 

{ after(grammarAccess.getExprSimpleAccess().getMotTlKeyword_1_1_0_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}



rule__Model__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Model__Group__0__Impl
	rule__Model__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Model__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getModelAccess().getModelAssignment_0()); }
(rule__Model__ModelAssignment_0)
{ after(grammarAccess.getModelAccess().getModelAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Model__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Model__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Model__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getModelAccess().getLCTerminalRuleCall_1()); }
(	RULE_LC)?
{ after(grammarAccess.getModelAccess().getLCTerminalRuleCall_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Function__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Function__Group__0__Impl
	rule__Function__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Function__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunctionAccess().getFunctionKeyword_0()); }

	'function' 

{ after(grammarAccess.getFunctionAccess().getFunctionKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Function__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Function__Group__1__Impl
	rule__Function__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Function__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunctionAccess().getLCTerminalRuleCall_1()); }
	RULE_LC
{ after(grammarAccess.getFunctionAccess().getLCTerminalRuleCall_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Function__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Function__Group__2__Impl
	rule__Function__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Function__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunctionAccess().getFunNameAssignment_2()); }
(rule__Function__FunNameAssignment_2)
{ after(grammarAccess.getFunctionAccess().getFunNameAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Function__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Function__Group__3__Impl
	rule__Function__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Function__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunctionAccess().getColonKeyword_3()); }

	':' 

{ after(grammarAccess.getFunctionAccess().getColonKeyword_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Function__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Function__Group__4__Impl
	rule__Function__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Function__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunctionAccess().getLCTerminalRuleCall_4()); }
	RULE_LC
{ after(grammarAccess.getFunctionAccess().getLCTerminalRuleCall_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Function__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Function__Group__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Function__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunctionAccess().getDefAssignment_5()); }
(rule__Function__DefAssignment_5)
{ after(grammarAccess.getFunctionAccess().getDefAssignment_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}














rule__Definiton__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Definiton__Group__0__Impl
	rule__Definiton__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Definiton__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDefinitonAccess().getReadKeyword_0()); }

	'read' 

{ after(grammarAccess.getDefinitonAccess().getReadKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Definiton__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Definiton__Group__1__Impl
	rule__Definiton__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Definiton__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDefinitonAccess().getLCTerminalRuleCall_1()); }
	RULE_LC
{ after(grammarAccess.getDefinitonAccess().getLCTerminalRuleCall_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Definiton__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Definiton__Group__2__Impl
	rule__Definiton__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Definiton__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDefinitonAccess().getInputVarsAssignment_2()); }
(rule__Definiton__InputVarsAssignment_2)
{ after(grammarAccess.getDefinitonAccess().getInputVarsAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Definiton__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Definiton__Group__3__Impl
	rule__Definiton__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Definiton__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDefinitonAccess().getLCTerminalRuleCall_3()); }
	RULE_LC
{ after(grammarAccess.getDefinitonAccess().getLCTerminalRuleCall_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Definiton__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Definiton__Group__4__Impl
	rule__Definiton__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Definiton__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDefinitonAccess().getPercentSignKeyword_4()); }

	'%' 

{ after(grammarAccess.getDefinitonAccess().getPercentSignKeyword_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Definiton__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Definiton__Group__5__Impl
	rule__Definiton__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__Definiton__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDefinitonAccess().getCommandListAssignment_5()); }
(rule__Definiton__CommandListAssignment_5)
{ after(grammarAccess.getDefinitonAccess().getCommandListAssignment_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Definiton__Group__6
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Definiton__Group__6__Impl
	rule__Definiton__Group__7
;
finally {
	restoreStackSize(stackSize);
}

rule__Definiton__Group__6__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDefinitonAccess().getLCTerminalRuleCall_6()); }
	RULE_LC
{ after(grammarAccess.getDefinitonAccess().getLCTerminalRuleCall_6()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Definiton__Group__7
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Definiton__Group__7__Impl
	rule__Definiton__Group__8
;
finally {
	restoreStackSize(stackSize);
}

rule__Definiton__Group__7__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDefinitonAccess().getPercentSignKeyword_7()); }

	'%' 

{ after(grammarAccess.getDefinitonAccess().getPercentSignKeyword_7()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Definiton__Group__8
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Definiton__Group__8__Impl
	rule__Definiton__Group__9
;
finally {
	restoreStackSize(stackSize);
}

rule__Definiton__Group__8__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDefinitonAccess().getWriteKeyword_8()); }

	'write' 

{ after(grammarAccess.getDefinitonAccess().getWriteKeyword_8()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Definiton__Group__9
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Definiton__Group__9__Impl
	rule__Definiton__Group__10
;
finally {
	restoreStackSize(stackSize);
}

rule__Definiton__Group__9__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDefinitonAccess().getLCTerminalRuleCall_9()); }
	RULE_LC
{ after(grammarAccess.getDefinitonAccess().getLCTerminalRuleCall_9()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Definiton__Group__10
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Definiton__Group__10__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Definiton__Group__10__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDefinitonAccess().getOutputVarsAssignment_10()); }
(rule__Definiton__OutputVarsAssignment_10)
{ after(grammarAccess.getDefinitonAccess().getOutputVarsAssignment_10()); }
)

;
finally {
	restoreStackSize(stackSize);
}
























rule__Input__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Input__Group__0__Impl
	rule__Input__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Input__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInputAccess().getVARIABLETerminalRuleCall_0()); }
	RULE_VARIABLE
{ after(grammarAccess.getInputAccess().getVARIABLETerminalRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Input__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Input__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Input__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInputAccess().getGroup_1()); }
(rule__Input__Group_1__0)*
{ after(grammarAccess.getInputAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Input__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Input__Group_1__0__Impl
	rule__Input__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Input__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInputAccess().getCommaKeyword_1_0()); }

	',' 

{ after(grammarAccess.getInputAccess().getCommaKeyword_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Input__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Input__Group_1__1__Impl
	rule__Input__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Input__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInputAccess().getLCTerminalRuleCall_1_1()); }
(	RULE_LC)?
{ after(grammarAccess.getInputAccess().getLCTerminalRuleCall_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Input__Group_1__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Input__Group_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Input__Group_1__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInputAccess().getVARIABLETerminalRuleCall_1_2()); }
	RULE_VARIABLE
{ after(grammarAccess.getInputAccess().getVARIABLETerminalRuleCall_1_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__Output__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Output__Group__0__Impl
	rule__Output__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Output__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOutputAccess().getVARIABLETerminalRuleCall_0()); }
	RULE_VARIABLE
{ after(grammarAccess.getOutputAccess().getVARIABLETerminalRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Output__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Output__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Output__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOutputAccess().getGroup_1()); }
(rule__Output__Group_1__0)*
{ after(grammarAccess.getOutputAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Output__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Output__Group_1__0__Impl
	rule__Output__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Output__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOutputAccess().getCommaKeyword_1_0()); }

	',' 

{ after(grammarAccess.getOutputAccess().getCommaKeyword_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Output__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Output__Group_1__1__Impl
	rule__Output__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Output__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOutputAccess().getLCTerminalRuleCall_1_1()); }
(	RULE_LC)?
{ after(grammarAccess.getOutputAccess().getLCTerminalRuleCall_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Output__Group_1__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Output__Group_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Output__Group_1__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOutputAccess().getVARIABLETerminalRuleCall_1_2()); }
	RULE_VARIABLE
{ after(grammarAccess.getOutputAccess().getVARIABLETerminalRuleCall_1_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__Commands__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Commands__Group__0__Impl
	rule__Commands__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Commands__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCommandsAccess().getCAssignment_0()); }
(rule__Commands__CAssignment_0)
{ after(grammarAccess.getCommandsAccess().getCAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Commands__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Commands__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Commands__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCommandsAccess().getGroup_1()); }
(rule__Commands__Group_1__0)*
{ after(grammarAccess.getCommandsAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Commands__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Commands__Group_1__0__Impl
	rule__Commands__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Commands__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCommandsAccess().getSemicolonKeyword_1_0()); }

	';' 

{ after(grammarAccess.getCommandsAccess().getSemicolonKeyword_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Commands__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Commands__Group_1__1__Impl
	rule__Commands__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Commands__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCommandsAccess().getLCTerminalRuleCall_1_1()); }
(	RULE_LC)?
{ after(grammarAccess.getCommandsAccess().getLCTerminalRuleCall_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Commands__Group_1__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Commands__Group_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Commands__Group_1__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCommandsAccess().getCAssignment_1_2()); }
(rule__Commands__CAssignment_1_2)
{ after(grammarAccess.getCommandsAccess().getCAssignment_1_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__Vars__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Vars__Group__0__Impl
	rule__Vars__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Vars__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVarsAccess().getVARIABLETerminalRuleCall_0()); }
	RULE_VARIABLE
{ after(grammarAccess.getVarsAccess().getVARIABLETerminalRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Vars__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Vars__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Vars__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVarsAccess().getGroup_1()); }
(rule__Vars__Group_1__0)?
{ after(grammarAccess.getVarsAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Vars__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Vars__Group_1__0__Impl
	rule__Vars__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Vars__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVarsAccess().getCommaKeyword_1_0()); }

	',' 

{ after(grammarAccess.getVarsAccess().getCommaKeyword_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Vars__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Vars__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Vars__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVarsAccess().getVarsParserRuleCall_1_1()); }
	ruleVars
{ after(grammarAccess.getVarsAccess().getVarsParserRuleCall_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Exprs__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Exprs__Group__0__Impl
	rule__Exprs__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Exprs__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExprsAccess().getExprParserRuleCall_0()); }
	ruleExpr
{ after(grammarAccess.getExprsAccess().getExprParserRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Exprs__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Exprs__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Exprs__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExprsAccess().getGroup_1()); }
(rule__Exprs__Group_1__0)?
{ after(grammarAccess.getExprsAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Exprs__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Exprs__Group_1__0__Impl
	rule__Exprs__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Exprs__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExprsAccess().getCommaKeyword_1_0()); }

	',' 

{ after(grammarAccess.getExprsAccess().getCommaKeyword_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Exprs__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Exprs__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Exprs__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExprsAccess().getExpAssignment_1_1()); }
(rule__Exprs__ExpAssignment_1_1)
{ after(grammarAccess.getExprsAccess().getExpAssignment_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Command__Group_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Command__Group_0__0__Impl
	rule__Command__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Command__Group_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCommandAccess().getCommandAction_0_0()); }
(

)
{ after(grammarAccess.getCommandAccess().getCommandAction_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Command__Group_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Command__Group_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Command__Group_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCommandAccess().getNopKeyword_0_1()); }

	'nop' 

{ after(grammarAccess.getCommandAccess().getNopKeyword_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Command__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Command__Group_1__0__Impl
	rule__Command__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Command__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCommandAccess().getVarLAssignment_1_0()); }
(rule__Command__VarLAssignment_1_0)
{ after(grammarAccess.getCommandAccess().getVarLAssignment_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Command__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Command__Group_1__1__Impl
	rule__Command__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Command__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCommandAccess().getLCTerminalRuleCall_1_1()); }
(	RULE_LC)?
{ after(grammarAccess.getCommandAccess().getLCTerminalRuleCall_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Command__Group_1__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Command__Group_1__2__Impl
	rule__Command__Group_1__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Command__Group_1__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCommandAccess().getColonEqualsSignKeyword_1_2()); }

	':=' 

{ after(grammarAccess.getCommandAccess().getColonEqualsSignKeyword_1_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Command__Group_1__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Command__Group_1__3__Impl
	rule__Command__Group_1__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Command__Group_1__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCommandAccess().getLCTerminalRuleCall_1_3()); }
(	RULE_LC)?
{ after(grammarAccess.getCommandAccess().getLCTerminalRuleCall_1_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Command__Group_1__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Command__Group_1__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Command__Group_1__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCommandAccess().getExpLAssignment_1_4()); }
(rule__Command__ExpLAssignment_1_4)
{ after(grammarAccess.getCommandAccess().getExpLAssignment_1_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}












rule__Command__Group_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Command__Group_2__0__Impl
	rule__Command__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Command__Group_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCommandAccess().getNomAssignment_2_0()); }
(rule__Command__NomAssignment_2_0)
{ after(grammarAccess.getCommandAccess().getNomAssignment_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Command__Group_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Command__Group_2__1__Impl
	rule__Command__Group_2__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Command__Group_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCommandAccess().getLCTerminalRuleCall_2_1()); }
	RULE_LC
{ after(grammarAccess.getCommandAccess().getLCTerminalRuleCall_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Command__Group_2__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Command__Group_2__2__Impl
	rule__Command__Group_2__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Command__Group_2__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCommandAccess().getExpAssignment_2_2()); }
(rule__Command__ExpAssignment_2_2)
{ after(grammarAccess.getCommandAccess().getExpAssignment_2_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Command__Group_2__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Command__Group_2__3__Impl
	rule__Command__Group_2__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Command__Group_2__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCommandAccess().getLCTerminalRuleCall_2_3()); }
	RULE_LC
{ after(grammarAccess.getCommandAccess().getLCTerminalRuleCall_2_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Command__Group_2__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Command__Group_2__4__Impl
	rule__Command__Group_2__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Command__Group_2__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCommandAccess().getDoKeyword_2_4()); }

	'do' 

{ after(grammarAccess.getCommandAccess().getDoKeyword_2_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Command__Group_2__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Command__Group_2__5__Impl
	rule__Command__Group_2__6
;
finally {
	restoreStackSize(stackSize);
}

rule__Command__Group_2__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCommandAccess().getLCTerminalRuleCall_2_5()); }
	RULE_LC
{ after(grammarAccess.getCommandAccess().getLCTerminalRuleCall_2_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Command__Group_2__6
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Command__Group_2__6__Impl
	rule__Command__Group_2__7
;
finally {
	restoreStackSize(stackSize);
}

rule__Command__Group_2__6__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCommandAccess().getC1Assignment_2_6()); }
(rule__Command__C1Assignment_2_6)
{ after(grammarAccess.getCommandAccess().getC1Assignment_2_6()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Command__Group_2__7
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Command__Group_2__7__Impl
	rule__Command__Group_2__8
;
finally {
	restoreStackSize(stackSize);
}

rule__Command__Group_2__7__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCommandAccess().getLCTerminalRuleCall_2_7()); }
	RULE_LC
{ after(grammarAccess.getCommandAccess().getLCTerminalRuleCall_2_7()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Command__Group_2__8
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Command__Group_2__8__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Command__Group_2__8__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCommandAccess().getOdKeyword_2_8()); }

	'od' 

{ after(grammarAccess.getCommandAccess().getOdKeyword_2_8()); }
)

;
finally {
	restoreStackSize(stackSize);
}




















rule__Command__Group_3__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Command__Group_3__0__Impl
	rule__Command__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Command__Group_3__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCommandAccess().getNomAssignment_3_0()); }
(rule__Command__NomAssignment_3_0)
{ after(grammarAccess.getCommandAccess().getNomAssignment_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Command__Group_3__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Command__Group_3__1__Impl
	rule__Command__Group_3__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Command__Group_3__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCommandAccess().getLCTerminalRuleCall_3_1()); }
	RULE_LC
{ after(grammarAccess.getCommandAccess().getLCTerminalRuleCall_3_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Command__Group_3__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Command__Group_3__2__Impl
	rule__Command__Group_3__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Command__Group_3__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCommandAccess().getExpAssignment_3_2()); }
(rule__Command__ExpAssignment_3_2)
{ after(grammarAccess.getCommandAccess().getExpAssignment_3_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Command__Group_3__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Command__Group_3__3__Impl
	rule__Command__Group_3__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Command__Group_3__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCommandAccess().getLCTerminalRuleCall_3_3()); }
	RULE_LC
{ after(grammarAccess.getCommandAccess().getLCTerminalRuleCall_3_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Command__Group_3__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Command__Group_3__4__Impl
	rule__Command__Group_3__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Command__Group_3__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCommandAccess().getDoKeyword_3_4()); }

	'do' 

{ after(grammarAccess.getCommandAccess().getDoKeyword_3_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Command__Group_3__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Command__Group_3__5__Impl
	rule__Command__Group_3__6
;
finally {
	restoreStackSize(stackSize);
}

rule__Command__Group_3__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCommandAccess().getLCTerminalRuleCall_3_5()); }
	RULE_LC
{ after(grammarAccess.getCommandAccess().getLCTerminalRuleCall_3_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Command__Group_3__6
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Command__Group_3__6__Impl
	rule__Command__Group_3__7
;
finally {
	restoreStackSize(stackSize);
}

rule__Command__Group_3__6__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCommandAccess().getC1Assignment_3_6()); }
(rule__Command__C1Assignment_3_6)
{ after(grammarAccess.getCommandAccess().getC1Assignment_3_6()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Command__Group_3__7
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Command__Group_3__7__Impl
	rule__Command__Group_3__8
;
finally {
	restoreStackSize(stackSize);
}

rule__Command__Group_3__7__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCommandAccess().getLCTerminalRuleCall_3_7()); }
	RULE_LC
{ after(grammarAccess.getCommandAccess().getLCTerminalRuleCall_3_7()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Command__Group_3__8
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Command__Group_3__8__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Command__Group_3__8__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCommandAccess().getOdKeyword_3_8()); }

	'od' 

{ after(grammarAccess.getCommandAccess().getOdKeyword_3_8()); }
)

;
finally {
	restoreStackSize(stackSize);
}




















rule__Command__Group_4__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Command__Group_4__0__Impl
	rule__Command__Group_4__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Command__Group_4__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCommandAccess().getNomAssignment_4_0()); }
(rule__Command__NomAssignment_4_0)
{ after(grammarAccess.getCommandAccess().getNomAssignment_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Command__Group_4__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Command__Group_4__1__Impl
	rule__Command__Group_4__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Command__Group_4__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCommandAccess().getLCTerminalRuleCall_4_1()); }
	RULE_LC
{ after(grammarAccess.getCommandAccess().getLCTerminalRuleCall_4_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Command__Group_4__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Command__Group_4__2__Impl
	rule__Command__Group_4__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Command__Group_4__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCommandAccess().getExp1Assignment_4_2()); }
(rule__Command__Exp1Assignment_4_2)
{ after(grammarAccess.getCommandAccess().getExp1Assignment_4_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Command__Group_4__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Command__Group_4__3__Impl
	rule__Command__Group_4__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Command__Group_4__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCommandAccess().getLCTerminalRuleCall_4_3()); }
	RULE_LC
{ after(grammarAccess.getCommandAccess().getLCTerminalRuleCall_4_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Command__Group_4__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Command__Group_4__4__Impl
	rule__Command__Group_4__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Command__Group_4__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCommandAccess().getInKeyword_4_4()); }

	'in' 

{ after(grammarAccess.getCommandAccess().getInKeyword_4_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Command__Group_4__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Command__Group_4__5__Impl
	rule__Command__Group_4__6
;
finally {
	restoreStackSize(stackSize);
}

rule__Command__Group_4__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCommandAccess().getLCTerminalRuleCall_4_5()); }
	RULE_LC
{ after(grammarAccess.getCommandAccess().getLCTerminalRuleCall_4_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Command__Group_4__6
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Command__Group_4__6__Impl
	rule__Command__Group_4__7
;
finally {
	restoreStackSize(stackSize);
}

rule__Command__Group_4__6__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCommandAccess().getExp2Assignment_4_6()); }
(rule__Command__Exp2Assignment_4_6)
{ after(grammarAccess.getCommandAccess().getExp2Assignment_4_6()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Command__Group_4__7
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Command__Group_4__7__Impl
	rule__Command__Group_4__8
;
finally {
	restoreStackSize(stackSize);
}

rule__Command__Group_4__7__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCommandAccess().getLCTerminalRuleCall_4_7()); }
	RULE_LC
{ after(grammarAccess.getCommandAccess().getLCTerminalRuleCall_4_7()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Command__Group_4__8
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Command__Group_4__8__Impl
	rule__Command__Group_4__9
;
finally {
	restoreStackSize(stackSize);
}

rule__Command__Group_4__8__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCommandAccess().getDoKeyword_4_8()); }

	'do' 

{ after(grammarAccess.getCommandAccess().getDoKeyword_4_8()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Command__Group_4__9
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Command__Group_4__9__Impl
	rule__Command__Group_4__10
;
finally {
	restoreStackSize(stackSize);
}

rule__Command__Group_4__9__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCommandAccess().getLCTerminalRuleCall_4_9()); }
	RULE_LC
{ after(grammarAccess.getCommandAccess().getLCTerminalRuleCall_4_9()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Command__Group_4__10
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Command__Group_4__10__Impl
	rule__Command__Group_4__11
;
finally {
	restoreStackSize(stackSize);
}

rule__Command__Group_4__10__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCommandAccess().getC1Assignment_4_10()); }
(rule__Command__C1Assignment_4_10)
{ after(grammarAccess.getCommandAccess().getC1Assignment_4_10()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Command__Group_4__11
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Command__Group_4__11__Impl
	rule__Command__Group_4__12
;
finally {
	restoreStackSize(stackSize);
}

rule__Command__Group_4__11__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCommandAccess().getLCTerminalRuleCall_4_11()); }
	RULE_LC
{ after(grammarAccess.getCommandAccess().getLCTerminalRuleCall_4_11()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Command__Group_4__12
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Command__Group_4__12__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Command__Group_4__12__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCommandAccess().getOdKeyword_4_12()); }

	'od' 

{ after(grammarAccess.getCommandAccess().getOdKeyword_4_12()); }
)

;
finally {
	restoreStackSize(stackSize);
}




























rule__Command__Group_5__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Command__Group_5__0__Impl
	rule__Command__Group_5__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Command__Group_5__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCommandAccess().getNomAssignment_5_0()); }
(rule__Command__NomAssignment_5_0)
{ after(grammarAccess.getCommandAccess().getNomAssignment_5_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Command__Group_5__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Command__Group_5__1__Impl
	rule__Command__Group_5__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Command__Group_5__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCommandAccess().getLCTerminalRuleCall_5_1()); }
	RULE_LC
{ after(grammarAccess.getCommandAccess().getLCTerminalRuleCall_5_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Command__Group_5__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Command__Group_5__2__Impl
	rule__Command__Group_5__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Command__Group_5__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCommandAccess().getExpAssignment_5_2()); }
(rule__Command__ExpAssignment_5_2)
{ after(grammarAccess.getCommandAccess().getExpAssignment_5_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Command__Group_5__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Command__Group_5__3__Impl
	rule__Command__Group_5__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Command__Group_5__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCommandAccess().getLCTerminalRuleCall_5_3()); }
	RULE_LC
{ after(grammarAccess.getCommandAccess().getLCTerminalRuleCall_5_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Command__Group_5__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Command__Group_5__4__Impl
	rule__Command__Group_5__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Command__Group_5__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCommandAccess().getThenKeyword_5_4()); }

	'then' 

{ after(grammarAccess.getCommandAccess().getThenKeyword_5_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Command__Group_5__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Command__Group_5__5__Impl
	rule__Command__Group_5__6
;
finally {
	restoreStackSize(stackSize);
}

rule__Command__Group_5__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCommandAccess().getLCTerminalRuleCall_5_5()); }
	RULE_LC
{ after(grammarAccess.getCommandAccess().getLCTerminalRuleCall_5_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Command__Group_5__6
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Command__Group_5__6__Impl
	rule__Command__Group_5__7
;
finally {
	restoreStackSize(stackSize);
}

rule__Command__Group_5__6__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCommandAccess().getC1Assignment_5_6()); }
(rule__Command__C1Assignment_5_6)
{ after(grammarAccess.getCommandAccess().getC1Assignment_5_6()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Command__Group_5__7
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Command__Group_5__7__Impl
	rule__Command__Group_5__8
;
finally {
	restoreStackSize(stackSize);
}

rule__Command__Group_5__7__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCommandAccess().getLCTerminalRuleCall_5_7()); }
	RULE_LC
{ after(grammarAccess.getCommandAccess().getLCTerminalRuleCall_5_7()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Command__Group_5__8
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Command__Group_5__8__Impl
	rule__Command__Group_5__9
;
finally {
	restoreStackSize(stackSize);
}

rule__Command__Group_5__8__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCommandAccess().getGroup_5_8()); }
(rule__Command__Group_5_8__0)?
{ after(grammarAccess.getCommandAccess().getGroup_5_8()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Command__Group_5__9
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Command__Group_5__9__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Command__Group_5__9__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCommandAccess().getFiKeyword_5_9()); }

	'fi' 

{ after(grammarAccess.getCommandAccess().getFiKeyword_5_9()); }
)

;
finally {
	restoreStackSize(stackSize);
}






















rule__Command__Group_5_8__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Command__Group_5_8__0__Impl
	rule__Command__Group_5_8__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Command__Group_5_8__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCommandAccess().getElseKeyword_5_8_0()); }

	'else' 

{ after(grammarAccess.getCommandAccess().getElseKeyword_5_8_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Command__Group_5_8__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Command__Group_5_8__1__Impl
	rule__Command__Group_5_8__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Command__Group_5_8__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCommandAccess().getLCTerminalRuleCall_5_8_1()); }
	RULE_LC
{ after(grammarAccess.getCommandAccess().getLCTerminalRuleCall_5_8_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Command__Group_5_8__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Command__Group_5_8__2__Impl
	rule__Command__Group_5_8__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Command__Group_5_8__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCommandAccess().getC2Assignment_5_8_2()); }
(rule__Command__C2Assignment_5_8_2)
{ after(grammarAccess.getCommandAccess().getC2Assignment_5_8_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Command__Group_5_8__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Command__Group_5_8__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Command__Group_5_8__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCommandAccess().getLCTerminalRuleCall_5_8_3()); }
	RULE_LC
{ after(grammarAccess.getCommandAccess().getLCTerminalRuleCall_5_8_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__And__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__And__Group__0__Impl
	rule__And__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__And__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAndAccess().getExpOuAssignment_0()); }
(rule__And__ExpOuAssignment_0)
{ after(grammarAccess.getAndAccess().getExpOuAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__And__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__And__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__And__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAndAccess().getGroup_1()); }
(rule__And__Group_1__0)*
{ after(grammarAccess.getAndAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__And__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__And__Group_1__0__Impl
	rule__And__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__And__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAndAccess().getLCTerminalRuleCall_1_0()); }
	RULE_LC
{ after(grammarAccess.getAndAccess().getLCTerminalRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__And__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__And__Group_1__1__Impl
	rule__And__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__And__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAndAccess().getAndKeyword_1_1()); }

	'and' 

{ after(grammarAccess.getAndAccess().getAndKeyword_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__And__Group_1__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__And__Group_1__2__Impl
	rule__And__Group_1__3
;
finally {
	restoreStackSize(stackSize);
}

rule__And__Group_1__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAndAccess().getLCTerminalRuleCall_1_2()); }
	RULE_LC
{ after(grammarAccess.getAndAccess().getLCTerminalRuleCall_1_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__And__Group_1__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__And__Group_1__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__And__Group_1__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAndAccess().getExpOu2Assignment_1_3()); }
(rule__And__ExpOu2Assignment_1_3)
{ after(grammarAccess.getAndAccess().getExpOu2Assignment_1_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__Or__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Or__Group__0__Impl
	rule__Or__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Or__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOrAccess().getExpNonAssignment_0()); }
(rule__Or__ExpNonAssignment_0)
{ after(grammarAccess.getOrAccess().getExpNonAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Or__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Or__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Or__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOrAccess().getGroup_1()); }
(rule__Or__Group_1__0)*
{ after(grammarAccess.getOrAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Or__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Or__Group_1__0__Impl
	rule__Or__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Or__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOrAccess().getLCTerminalRuleCall_1_0()); }
	RULE_LC
{ after(grammarAccess.getOrAccess().getLCTerminalRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Or__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Or__Group_1__1__Impl
	rule__Or__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Or__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOrAccess().getOrKeyword_1_1()); }

	'or' 

{ after(grammarAccess.getOrAccess().getOrKeyword_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Or__Group_1__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Or__Group_1__2__Impl
	rule__Or__Group_1__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Or__Group_1__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOrAccess().getLCTerminalRuleCall_1_2()); }
	RULE_LC
{ after(grammarAccess.getOrAccess().getLCTerminalRuleCall_1_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Or__Group_1__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Or__Group_1__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Or__Group_1__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOrAccess().getExpNon2Assignment_1_3()); }
(rule__Or__ExpNon2Assignment_1_3)
{ after(grammarAccess.getOrAccess().getExpNon2Assignment_1_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__Not__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Not__Group__0__Impl
	rule__Not__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Not__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNotAccess().getGroup_0()); }
(rule__Not__Group_0__0)*
{ after(grammarAccess.getNotAccess().getGroup_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Not__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Not__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Not__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNotAccess().getExpEqAssignment_1()); }
(rule__Not__ExpEqAssignment_1)
{ after(grammarAccess.getNotAccess().getExpEqAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Not__Group_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Not__Group_0__0__Impl
	rule__Not__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Not__Group_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNotAccess().getNonAssignment_0_0()); }
(rule__Not__NonAssignment_0_0)
{ after(grammarAccess.getNotAccess().getNonAssignment_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Not__Group_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Not__Group_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Not__Group_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNotAccess().getLCTerminalRuleCall_0_1()); }
	RULE_LC
{ after(grammarAccess.getNotAccess().getLCTerminalRuleCall_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Eq__Group_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Eq__Group_0__0__Impl
	rule__Eq__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Eq__Group_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEqAccess().getExprEq1Assignment_0_0()); }
(rule__Eq__ExprEq1Assignment_0_0)
{ after(grammarAccess.getEqAccess().getExprEq1Assignment_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Eq__Group_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Eq__Group_0__1__Impl
	rule__Eq__Group_0__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Eq__Group_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEqAccess().getLCTerminalRuleCall_0_1()); }
(	RULE_LC)?
{ after(grammarAccess.getEqAccess().getLCTerminalRuleCall_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Eq__Group_0__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Eq__Group_0__2__Impl
	rule__Eq__Group_0__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Eq__Group_0__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEqAccess().getEqualsSignQuestionMarkKeyword_0_2()); }

	'=?' 

{ after(grammarAccess.getEqAccess().getEqualsSignQuestionMarkKeyword_0_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Eq__Group_0__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Eq__Group_0__3__Impl
	rule__Eq__Group_0__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Eq__Group_0__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEqAccess().getLCTerminalRuleCall_0_3()); }
(	RULE_LC)?
{ after(grammarAccess.getEqAccess().getLCTerminalRuleCall_0_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Eq__Group_0__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Eq__Group_0__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Eq__Group_0__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEqAccess().getExprEq2Assignment_0_4()); }
(rule__Eq__ExprEq2Assignment_0_4)
{ after(grammarAccess.getEqAccess().getExprEq2Assignment_0_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}












rule__Eq__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Eq__Group_1__0__Impl
	rule__Eq__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Eq__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEqAccess().getLeftParenthesisKeyword_1_0()); }

	'(' 

{ after(grammarAccess.getEqAccess().getLeftParenthesisKeyword_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Eq__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Eq__Group_1__1__Impl
	rule__Eq__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Eq__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEqAccess().getExpAssignment_1_1()); }
(rule__Eq__ExpAssignment_1_1)
{ after(grammarAccess.getEqAccess().getExpAssignment_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Eq__Group_1__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Eq__Group_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Eq__Group_1__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEqAccess().getRightParenthesisKeyword_1_2()); }

	')' 

{ after(grammarAccess.getEqAccess().getRightParenthesisKeyword_1_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__ExprSimple__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ExprSimple__Group__0__Impl
	rule__ExprSimple__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ExprSimple__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExprSimpleAccess().getLeftParenthesisKeyword_0()); }

	'(' 

{ after(grammarAccess.getExprSimpleAccess().getLeftParenthesisKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ExprSimple__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ExprSimple__Group__1__Impl
	rule__ExprSimple__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ExprSimple__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExprSimpleAccess().getAlternatives_1()); }
(rule__ExprSimple__Alternatives_1)
{ after(grammarAccess.getExprSimpleAccess().getAlternatives_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ExprSimple__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ExprSimple__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ExprSimple__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExprSimpleAccess().getRightParenthesisKeyword_2()); }

	')' 

{ after(grammarAccess.getExprSimpleAccess().getRightParenthesisKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__ExprSimple__Group_1_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ExprSimple__Group_1_0__0__Impl
	rule__ExprSimple__Group_1_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ExprSimple__Group_1_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExprSimpleAccess().getMotAssignment_1_0_0()); }
(rule__ExprSimple__MotAssignment_1_0_0)
{ after(grammarAccess.getExprSimpleAccess().getMotAssignment_1_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ExprSimple__Group_1_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ExprSimple__Group_1_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ExprSimple__Group_1_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExprSimpleAccess().getLexprAssignment_1_0_1()); }
(rule__ExprSimple__LexprAssignment_1_0_1)
{ after(grammarAccess.getExprSimpleAccess().getLexprAssignment_1_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__ExprSimple__Group_1_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ExprSimple__Group_1_1__0__Impl
	rule__ExprSimple__Group_1_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ExprSimple__Group_1_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExprSimpleAccess().getMotAssignment_1_1_0()); }
(rule__ExprSimple__MotAssignment_1_1_0)
{ after(grammarAccess.getExprSimpleAccess().getMotAssignment_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ExprSimple__Group_1_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ExprSimple__Group_1_1__1__Impl
	rule__ExprSimple__Group_1_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ExprSimple__Group_1_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExprSimpleAccess().getLCTerminalRuleCall_1_1_1()); }
	RULE_LC
{ after(grammarAccess.getExprSimpleAccess().getLCTerminalRuleCall_1_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ExprSimple__Group_1_1__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ExprSimple__Group_1_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ExprSimple__Group_1_1__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExprSimpleAccess().getExprAssignment_1_1_2()); }
(rule__ExprSimple__ExprAssignment_1_1_2)
{ after(grammarAccess.getExprSimpleAccess().getExprAssignment_1_1_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__Lexpr__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Lexpr__Group__0__Impl
	rule__Lexpr__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Lexpr__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLexprAccess().getLCTerminalRuleCall_0()); }
	RULE_LC
{ after(grammarAccess.getLexprAccess().getLCTerminalRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Lexpr__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Lexpr__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Lexpr__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLexprAccess().getExpAssignment_1()); }
(rule__Lexpr__ExpAssignment_1)
{ after(grammarAccess.getLexprAccess().getExpAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}







rule__Model__ModelAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getModelAccess().getModelFunctionParserRuleCall_0_0()); }
	rulefunction{ after(grammarAccess.getModelAccess().getModelFunctionParserRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Function__FunNameAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunctionAccess().getFunNameSYMBOLESTerminalRuleCall_2_0()); }
	RULE_SYMBOLES{ after(grammarAccess.getFunctionAccess().getFunNameSYMBOLESTerminalRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Function__DefAssignment_5
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunctionAccess().getDefDefinitonParserRuleCall_5_0()); }
	ruleDefiniton{ after(grammarAccess.getFunctionAccess().getDefDefinitonParserRuleCall_5_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Definiton__InputVarsAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDefinitonAccess().getInputVarsInputParserRuleCall_2_0()); }
	ruleInput{ after(grammarAccess.getDefinitonAccess().getInputVarsInputParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Definiton__CommandListAssignment_5
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDefinitonAccess().getCommandListCommandsParserRuleCall_5_0()); }
	ruleCommands{ after(grammarAccess.getDefinitonAccess().getCommandListCommandsParserRuleCall_5_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Definiton__OutputVarsAssignment_10
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDefinitonAccess().getOutputVarsOutputParserRuleCall_10_0()); }
	ruleOutput{ after(grammarAccess.getDefinitonAccess().getOutputVarsOutputParserRuleCall_10_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Commands__CAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCommandsAccess().getCCommandParserRuleCall_0_0()); }
	ruleCommand{ after(grammarAccess.getCommandsAccess().getCCommandParserRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Commands__CAssignment_1_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCommandsAccess().getCCommandParserRuleCall_1_2_0()); }
	ruleCommand{ after(grammarAccess.getCommandsAccess().getCCommandParserRuleCall_1_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Exprs__ExpAssignment_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExprsAccess().getExpExprsParserRuleCall_1_1_0()); }
	ruleExprs{ after(grammarAccess.getExprsAccess().getExpExprsParserRuleCall_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Command__VarLAssignment_1_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCommandAccess().getVarLVarsParserRuleCall_1_0_0()); }
	ruleVars{ after(grammarAccess.getCommandAccess().getVarLVarsParserRuleCall_1_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Command__ExpLAssignment_1_4
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCommandAccess().getExpLExprsParserRuleCall_1_4_0()); }
	ruleExprs{ after(grammarAccess.getCommandAccess().getExpLExprsParserRuleCall_1_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Command__NomAssignment_2_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCommandAccess().getNomWhileKeyword_2_0_0()); }
(
{ before(grammarAccess.getCommandAccess().getNomWhileKeyword_2_0_0()); }

	'while' 

{ after(grammarAccess.getCommandAccess().getNomWhileKeyword_2_0_0()); }
)

{ after(grammarAccess.getCommandAccess().getNomWhileKeyword_2_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Command__ExpAssignment_2_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCommandAccess().getExpExprParserRuleCall_2_2_0()); }
	ruleExpr{ after(grammarAccess.getCommandAccess().getExpExprParserRuleCall_2_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Command__C1Assignment_2_6
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCommandAccess().getC1CommandsParserRuleCall_2_6_0()); }
	ruleCommands{ after(grammarAccess.getCommandAccess().getC1CommandsParserRuleCall_2_6_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Command__NomAssignment_3_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCommandAccess().getNomForKeyword_3_0_0()); }
(
{ before(grammarAccess.getCommandAccess().getNomForKeyword_3_0_0()); }

	'for' 

{ after(grammarAccess.getCommandAccess().getNomForKeyword_3_0_0()); }
)

{ after(grammarAccess.getCommandAccess().getNomForKeyword_3_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Command__ExpAssignment_3_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCommandAccess().getExpExprParserRuleCall_3_2_0()); }
	ruleExpr{ after(grammarAccess.getCommandAccess().getExpExprParserRuleCall_3_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Command__C1Assignment_3_6
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCommandAccess().getC1CommandsParserRuleCall_3_6_0()); }
	ruleCommands{ after(grammarAccess.getCommandAccess().getC1CommandsParserRuleCall_3_6_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Command__NomAssignment_4_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCommandAccess().getNomForeachKeyword_4_0_0()); }
(
{ before(grammarAccess.getCommandAccess().getNomForeachKeyword_4_0_0()); }

	'foreach' 

{ after(grammarAccess.getCommandAccess().getNomForeachKeyword_4_0_0()); }
)

{ after(grammarAccess.getCommandAccess().getNomForeachKeyword_4_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Command__Exp1Assignment_4_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCommandAccess().getExp1ExprParserRuleCall_4_2_0()); }
	ruleExpr{ after(grammarAccess.getCommandAccess().getExp1ExprParserRuleCall_4_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Command__Exp2Assignment_4_6
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCommandAccess().getExp2ExprParserRuleCall_4_6_0()); }
	ruleExpr{ after(grammarAccess.getCommandAccess().getExp2ExprParserRuleCall_4_6_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Command__C1Assignment_4_10
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCommandAccess().getC1CommandsParserRuleCall_4_10_0()); }
	ruleCommands{ after(grammarAccess.getCommandAccess().getC1CommandsParserRuleCall_4_10_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Command__NomAssignment_5_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCommandAccess().getNomIfKeyword_5_0_0()); }
(
{ before(grammarAccess.getCommandAccess().getNomIfKeyword_5_0_0()); }

	'if' 

{ after(grammarAccess.getCommandAccess().getNomIfKeyword_5_0_0()); }
)

{ after(grammarAccess.getCommandAccess().getNomIfKeyword_5_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Command__ExpAssignment_5_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCommandAccess().getExpExprParserRuleCall_5_2_0()); }
	ruleExpr{ after(grammarAccess.getCommandAccess().getExpExprParserRuleCall_5_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Command__C1Assignment_5_6
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCommandAccess().getC1CommandsParserRuleCall_5_6_0()); }
	ruleCommands{ after(grammarAccess.getCommandAccess().getC1CommandsParserRuleCall_5_6_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Command__C2Assignment_5_8_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCommandAccess().getC2CommandsParserRuleCall_5_8_2_0()); }
	ruleCommands{ after(grammarAccess.getCommandAccess().getC2CommandsParserRuleCall_5_8_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Expr__ExprSimpleAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExprAccess().getExprSimpleExprSimpleParserRuleCall_0_0()); }
	ruleExprSimple{ after(grammarAccess.getExprAccess().getExprSimpleExprSimpleParserRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Expr__ExpEtAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExprAccess().getExpEtAndParserRuleCall_1_0()); }
	ruleAnd{ after(grammarAccess.getExprAccess().getExpEtAndParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Expr__ExpTerminaleAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExprAccess().getExpTerminaleExprTermParserRuleCall_2_0()); }
	ruleExprTerm{ after(grammarAccess.getExprAccess().getExpTerminaleExprTermParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__And__ExpOuAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAndAccess().getExpOuOrParserRuleCall_0_0()); }
	ruleOr{ after(grammarAccess.getAndAccess().getExpOuOrParserRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__And__ExpOu2Assignment_1_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAndAccess().getExpOu2OrParserRuleCall_1_3_0()); }
	ruleOr{ after(grammarAccess.getAndAccess().getExpOu2OrParserRuleCall_1_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Or__ExpNonAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOrAccess().getExpNonNotParserRuleCall_0_0()); }
	ruleNot{ after(grammarAccess.getOrAccess().getExpNonNotParserRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Or__ExpNon2Assignment_1_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOrAccess().getExpNon2NotParserRuleCall_1_3_0()); }
	ruleNot{ after(grammarAccess.getOrAccess().getExpNon2NotParserRuleCall_1_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Not__NonAssignment_0_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNotAccess().getNonNotKeyword_0_0_0()); }
(
{ before(grammarAccess.getNotAccess().getNonNotKeyword_0_0_0()); }

	'not' 

{ after(grammarAccess.getNotAccess().getNonNotKeyword_0_0_0()); }
)

{ after(grammarAccess.getNotAccess().getNonNotKeyword_0_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Not__ExpEqAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNotAccess().getExpEqEqParserRuleCall_1_0()); }
	ruleEq{ after(grammarAccess.getNotAccess().getExpEqEqParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Eq__ExprEq1Assignment_0_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEqAccess().getExprEq1Alternatives_0_0_0()); }
(rule__Eq__ExprEq1Alternatives_0_0_0)
{ after(grammarAccess.getEqAccess().getExprEq1Alternatives_0_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Eq__ExprEq2Assignment_0_4
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEqAccess().getExprEq2Alternatives_0_4_0()); }
(rule__Eq__ExprEq2Alternatives_0_4_0)
{ after(grammarAccess.getEqAccess().getExprEq2Alternatives_0_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Eq__ExpAssignment_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEqAccess().getExpAlternatives_1_1_0()); }
(rule__Eq__ExpAlternatives_1_1_0)
{ after(grammarAccess.getEqAccess().getExpAlternatives_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ExprTerm__ExprTermAssignment
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExprTermAccess().getExprTermAlternatives_0()); }
(rule__ExprTerm__ExprTermAlternatives_0)
{ after(grammarAccess.getExprTermAccess().getExprTermAlternatives_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ExprSimple__MotAssignment_1_0_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExprSimpleAccess().getMotAlternatives_1_0_0_0()); }
(rule__ExprSimple__MotAlternatives_1_0_0_0)
{ after(grammarAccess.getExprSimpleAccess().getMotAlternatives_1_0_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ExprSimple__LexprAssignment_1_0_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExprSimpleAccess().getLexprLexprParserRuleCall_1_0_1_0()); }
	ruleLexpr{ after(grammarAccess.getExprSimpleAccess().getLexprLexprParserRuleCall_1_0_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ExprSimple__MotAssignment_1_1_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExprSimpleAccess().getMotAlternatives_1_1_0_0()); }
(rule__ExprSimple__MotAlternatives_1_1_0_0)
{ after(grammarAccess.getExprSimpleAccess().getMotAlternatives_1_1_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ExprSimple__ExprAssignment_1_1_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExprSimpleAccess().getExprExprParserRuleCall_1_1_2_0()); }
	ruleExpr{ after(grammarAccess.getExprSimpleAccess().getExprExprParserRuleCall_1_1_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Lexpr__ExpAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLexprAccess().getExpExprParserRuleCall_1_0()); }
	ruleExpr{ after(grammarAccess.getLexprAccess().getExpExprParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


RULE_VARIABLE : 'A'..'Z' ('a'..'z'|'0'..'9'|'A'..'Z')*;

RULE_SYMBOLES : 'a'..'z' ('a'..'z'|'0'..'9'|'A'..'Z')*;

RULE_LC : (' '|'\n'|'\t')+;

RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_INT : ('0'..'9')+;

RULE_STRING : ('"' ('\\' ('b'|'t'|'n'|'f'|'r'|'u'|'"'|'\''|'\\')|~(('\\'|'"')))* '"'|'\'' ('\\' ('b'|'t'|'n'|'f'|'r'|'u'|'"'|'\''|'\\')|~(('\\'|'\'')))* '\'');

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;


